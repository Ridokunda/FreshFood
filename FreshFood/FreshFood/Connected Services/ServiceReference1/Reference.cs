//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FreshFood.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/FreshFoodService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/FreshFoodService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreshFood.ServiceReference1.onCart[] onCartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreshFood.ServiceReference1.onCart[] onCarts {
            get {
                return this.onCartsField;
            }
            set {
                if ((object.ReferenceEquals(this.onCartsField, value) != true)) {
                    this.onCartsField = value;
                    this.RaisePropertyChanged("onCarts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="onCart", Namespace="http://schemas.datacontract.org/2004/07/FreshFoodService")]
    [System.SerializableAttribute()]
    public partial class onCart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreshFood.ServiceReference1.Item ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Item_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OnCart_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OnCart_qtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreshFood.ServiceReference1.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreshFood.ServiceReference1.Item Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Item_ID {
            get {
                return this.Item_IDField;
            }
            set {
                if ((this.Item_IDField.Equals(value) != true)) {
                    this.Item_IDField = value;
                    this.RaisePropertyChanged("Item_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OnCart_ID {
            get {
                return this.OnCart_IDField;
            }
            set {
                if ((this.OnCart_IDField.Equals(value) != true)) {
                    this.OnCart_IDField = value;
                    this.RaisePropertyChanged("OnCart_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OnCart_qty {
            get {
                return this.OnCart_qtyField;
            }
            set {
                if ((this.OnCart_qtyField.Equals(value) != true)) {
                    this.OnCart_qtyField = value;
                    this.RaisePropertyChanged("OnCart_qty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreshFood.ServiceReference1.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/FreshFoodService")]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Item_CatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Item_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Item_imgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Item_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Item_priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int item_qtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreshFood.ServiceReference1.onCart[] onCartsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item_Cat {
            get {
                return this.Item_CatField;
            }
            set {
                if ((object.ReferenceEquals(this.Item_CatField, value) != true)) {
                    this.Item_CatField = value;
                    this.RaisePropertyChanged("Item_Cat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Item_ID {
            get {
                return this.Item_IDField;
            }
            set {
                if ((this.Item_IDField.Equals(value) != true)) {
                    this.Item_IDField = value;
                    this.RaisePropertyChanged("Item_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item_img {
            get {
                return this.Item_imgField;
            }
            set {
                if ((object.ReferenceEquals(this.Item_imgField, value) != true)) {
                    this.Item_imgField = value;
                    this.RaisePropertyChanged("Item_img");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item_name {
            get {
                return this.Item_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Item_nameField, value) != true)) {
                    this.Item_nameField = value;
                    this.RaisePropertyChanged("Item_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Item_price {
            get {
                return this.Item_priceField;
            }
            set {
                if ((this.Item_priceField.Equals(value) != true)) {
                    this.Item_priceField = value;
                    this.RaisePropertyChanged("Item_price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int item_qty {
            get {
                return this.item_qtyField;
            }
            set {
                if ((this.item_qtyField.Equals(value) != true)) {
                    this.item_qtyField = value;
                    this.RaisePropertyChanged("item_qty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreshFood.ServiceReference1.onCart[] onCarts {
            get {
                return this.onCartsField;
            }
            set {
                if ((object.ReferenceEquals(this.onCartsField, value) != true)) {
                    this.onCartsField = value;
                    this.RaisePropertyChanged("onCarts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        FreshFood.ServiceReference1.CompositeType GetDataUsingDataContract(FreshFood.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<FreshFood.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(FreshFood.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/register", ReplyAction="http://tempuri.org/IService1/registerResponse")]
        bool register(FreshFood.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/register", ReplyAction="http://tempuri.org/IService1/registerResponse")]
        System.Threading.Tasks.Task<bool> registerAsync(FreshFood.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        FreshFood.ServiceReference1.User Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<FreshFood.ServiceReference1.User> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItems", ReplyAction="http://tempuri.org/IService1/getItemsResponse")]
        FreshFood.ServiceReference1.Item[] getItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItems", ReplyAction="http://tempuri.org/IService1/getItemsResponse")]
        System.Threading.Tasks.Task<FreshFood.ServiceReference1.Item[]> getItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addItem", ReplyAction="http://tempuri.org/IService1/addItemResponse")]
        bool addItem(FreshFood.ServiceReference1.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addItem", ReplyAction="http://tempuri.org/IService1/addItemResponse")]
        System.Threading.Tasks.Task<bool> addItemAsync(FreshFood.ServiceReference1.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItem", ReplyAction="http://tempuri.org/IService1/getItemResponse")]
        FreshFood.ServiceReference1.Item getItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItem", ReplyAction="http://tempuri.org/IService1/getItemResponse")]
        System.Threading.Tasks.Task<FreshFood.ServiceReference1.Item> getItemAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItemId", ReplyAction="http://tempuri.org/IService1/getItemIdResponse")]
        int getItemId(FreshFood.ServiceReference1.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItemId", ReplyAction="http://tempuri.org/IService1/getItemIdResponse")]
        System.Threading.Tasks.Task<int> getItemIdAsync(FreshFood.ServiceReference1.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addItemonCart", ReplyAction="http://tempuri.org/IService1/addItemonCartResponse")]
        bool addItemonCart(int C_ID, int I_ID, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addItemonCart", ReplyAction="http://tempuri.org/IService1/addItemonCartResponse")]
        System.Threading.Tasks.Task<bool> addItemonCartAsync(int C_ID, int I_ID, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        FreshFood.ServiceReference1.User GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        System.Threading.Tasks.Task<FreshFood.ServiceReference1.User> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItemsOnCart", ReplyAction="http://tempuri.org/IService1/getItemsOnCartResponse")]
        FreshFood.ServiceReference1.Item[] getItemsOnCart(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItemsOnCart", ReplyAction="http://tempuri.org/IService1/getItemsOnCartResponse")]
        System.Threading.Tasks.Task<FreshFood.ServiceReference1.Item[]> getItemsOnCartAsync(int userid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : FreshFood.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<FreshFood.ServiceReference1.IService1>, FreshFood.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public FreshFood.ServiceReference1.CompositeType GetDataUsingDataContract(FreshFood.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<FreshFood.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(FreshFood.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool register(FreshFood.ServiceReference1.User user) {
            return base.Channel.register(user);
        }
        
        public System.Threading.Tasks.Task<bool> registerAsync(FreshFood.ServiceReference1.User user) {
            return base.Channel.registerAsync(user);
        }
        
        public FreshFood.ServiceReference1.User Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<FreshFood.ServiceReference1.User> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public FreshFood.ServiceReference1.Item[] getItems() {
            return base.Channel.getItems();
        }
        
        public System.Threading.Tasks.Task<FreshFood.ServiceReference1.Item[]> getItemsAsync() {
            return base.Channel.getItemsAsync();
        }
        
        public bool addItem(FreshFood.ServiceReference1.Item item) {
            return base.Channel.addItem(item);
        }
        
        public System.Threading.Tasks.Task<bool> addItemAsync(FreshFood.ServiceReference1.Item item) {
            return base.Channel.addItemAsync(item);
        }
        
        public FreshFood.ServiceReference1.Item getItem(int id) {
            return base.Channel.getItem(id);
        }
        
        public System.Threading.Tasks.Task<FreshFood.ServiceReference1.Item> getItemAsync(int id) {
            return base.Channel.getItemAsync(id);
        }
        
        public int getItemId(FreshFood.ServiceReference1.Item item) {
            return base.Channel.getItemId(item);
        }
        
        public System.Threading.Tasks.Task<int> getItemIdAsync(FreshFood.ServiceReference1.Item item) {
            return base.Channel.getItemIdAsync(item);
        }
        
        public bool addItemonCart(int C_ID, int I_ID, int qty) {
            return base.Channel.addItemonCart(C_ID, I_ID, qty);
        }
        
        public System.Threading.Tasks.Task<bool> addItemonCartAsync(int C_ID, int I_ID, int qty) {
            return base.Channel.addItemonCartAsync(C_ID, I_ID, qty);
        }
        
        public FreshFood.ServiceReference1.User GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<FreshFood.ServiceReference1.User> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public FreshFood.ServiceReference1.Item[] getItemsOnCart(int userid) {
            return base.Channel.getItemsOnCart(userid);
        }
        
        public System.Threading.Tasks.Task<FreshFood.ServiceReference1.Item[]> getItemsOnCartAsync(int userid) {
            return base.Channel.getItemsOnCartAsync(userid);
        }
    }
}
